package view;


import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
//import modelo.LivroDAO;
import classes.ProdutoVO;
import classes.PedidoVO;
import helper.PedidoHelper;
import helper.*;
import javax.swing.table.DefaultTableModel;
import classes.Produto;
import persistencia.ProdutoDAO;

/**
 *
 * @author Paloma
 */
public class ProdutoGUI extends javax.swing.JDialog {

    private PedidoVO pedido;
    private VisualizarProdutos visualizarProdutos;

    //private ProdutoDAO produtoDAO;  Não foi implementado ainda!!
    /**
     * Helper para Pedido
     */
    private PedidoHelper pedidoHelper;

    /**
     * /**
     * Creates new form ProdutosGUI
     */
    public ProdutoGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pedido = new PedidoVO(1l, "Pedido único!!!");
        pedidoHelper = PedidoHelper.getInstance();
        this.setTitle("Controle de Produtos");

        /*pedido = new PedidoVO(1, "Pedido único!!!");
        pedidoHelper = PedidoHelper.getInstance();
        comboBoxPedidos.setModel(new javax.swing.DefaultComboBoxModel(pedidoHelper.getCodigos()));
        
        try{
                produtoDAO = produtoDAO.getInstance("Gerenciarejo");
        }
        catch(SQLException e){
            System.out.println("Erro com o Banco de Dados!");
            System.exit(0);
        }
        catch(Exception e){
            System.out.println("Erro Fatal!");
            System.exit(0);
        }
        
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxPedidos = new javax.swing.JComboBox<>();
        txtProduto = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir1 = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnTodos1 = new javax.swing.JButton();
        lb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 586));
        getContentPane().setLayout(null);

        comboBoxPedidos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxPedidos.setMaximumSize(new java.awt.Dimension(72, 22));
        getContentPane().add(comboBoxPedidos);
        comboBoxPedidos.setBounds(250, 260, 230, 22);

        txtProduto.setMaximumSize(new java.awt.Dimension(72, 22));
        txtProduto.setMinimumSize(new java.awt.Dimension(72, 22));
        txtProduto.setPreferredSize(new java.awt.Dimension(72, 22));
        txtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutoActionPerformed(evt);
            }
        });
        getContentPane().add(txtProduto);
        txtProduto.setBounds(250, 300, 230, 22);

        txtDescricao.setMaximumSize(new java.awt.Dimension(72, 22));
        txtDescricao.setMinimumSize(new java.awt.Dimension(72, 22));
        txtDescricao.setPreferredSize(new java.awt.Dimension(72, 22));
        getContentPane().add(txtDescricao);
        txtDescricao.setBounds(250, 340, 230, 22);

        txtCategoria.setMaximumSize(new java.awt.Dimension(72, 22));
        txtCategoria.setMinimumSize(new java.awt.Dimension(72, 22));
        txtCategoria.setPreferredSize(new java.awt.Dimension(72, 22));
        getContentPane().add(txtCategoria);
        txtCategoria.setBounds(250, 380, 230, 22);

        txtQuantidade.setMaximumSize(new java.awt.Dimension(72, 22));
        txtQuantidade.setMinimumSize(new java.awt.Dimension(72, 22));
        txtQuantidade.setPreferredSize(new java.awt.Dimension(72, 22));
        getContentPane().add(txtQuantidade);
        txtQuantidade.setBounds(250, 420, 230, 22);

        txtPreco.setMaximumSize(new java.awt.Dimension(72, 22));
        txtPreco.setMinimumSize(new java.awt.Dimension(72, 22));
        txtPreco.setPreferredSize(new java.awt.Dimension(72, 22));
        getContentPane().add(txtPreco);
        txtPreco.setBounds(250, 460, 230, 22);

        btnPesquisar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar);
        btnPesquisar.setBounds(550, 260, 100, 30);

        btnIncluir.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnIncluir.setText("Incluir ");
        btnIncluir.setMaximumSize(new java.awt.Dimension(87, 25));
        btnIncluir.setMinimumSize(new java.awt.Dimension(87, 25));
        btnIncluir.setPreferredSize(new java.awt.Dimension(87, 25));
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnIncluir);
        btnIncluir.setBounds(550, 300, 100, 30);

        btnAlterar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setMaximumSize(new java.awt.Dimension(87, 25));
        btnAlterar.setMinimumSize(new java.awt.Dimension(87, 25));
        btnAlterar.setPreferredSize(new java.awt.Dimension(87, 25));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar);
        btnAlterar.setBounds(550, 340, 100, 30);

        btnExcluir1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnExcluir1.setText("Excluir");
        btnExcluir1.setMaximumSize(new java.awt.Dimension(87, 25));
        btnExcluir1.setMinimumSize(new java.awt.Dimension(87, 25));
        btnExcluir1.setPreferredSize(new java.awt.Dimension(87, 25));
        getContentPane().add(btnExcluir1);
        btnExcluir1.setBounds(550, 380, 100, 30);

        btnVoltar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltar.setMaximumSize(new java.awt.Dimension(87, 25));
        btnVoltar.setMinimumSize(new java.awt.Dimension(87, 25));
        btnVoltar.setPreferredSize(new java.awt.Dimension(87, 25));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar);
        btnVoltar.setBounds(550, 460, 100, 30);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pedidos: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(180, 260, 70, 30);

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Produto: ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(180, 300, 70, 30);

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Categoria:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(160, 380, 70, 30);

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Descrição do produto:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(90, 340, 170, 30);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Preço:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(190, 460, 50, 20);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantidade:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(150, 420, 90, 20);

        btnTodos1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnTodos1.setText("Todos");
        btnTodos1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTodos1.setMaximumSize(new java.awt.Dimension(87, 25));
        btnTodos1.setMinimumSize(new java.awt.Dimension(87, 25));
        btnTodos1.setPreferredSize(new java.awt.Dimension(87, 25));
        btnTodos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodos1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTodos1);
        btnTodos1.setBounds(550, 420, 100, 30);

        lb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos.png"))); // NOI18N
        getContentPane().add(lb);
        lb.setBounds(0, 0, 726, 586);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        Long id = -1l;
        ProdutoVO produto = null;

        try {
            if (txtProduto.getText() == null || txtProduto.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Id obrigatório!");
            } else {
                id = Long.parseLong(txtProduto.getText());

                //   produto = produtoDAO.pesquisar(id);
                if (produto != null) {
                    txtProduto.setText("" + id);
                    txtDescricao.setText(produto.getNomeProduto());
                    txtCategoria.setText(produto.getDescricaoProduto());
                    txtQuantidade.setText("" + produto.getPreco());
                    txtPreco.setText("" + produto.getQuantidade());
                } else {
                    JOptionPane.showMessageDialog(this, "Produto não encontrado!");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Valor de id inválido!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed

        try {
            helper.ProdutoHelper.validarEntrada(txtProduto.getText(), txtDescricao.getText(), txtCategoria.getText(), txtQuantidade.getText(), txtPreco.getText());
        } catch (Exception ex) {
            System.err.println("Erro");
        }
        helper.LimpaHelper.limpaTextoInserirProduto();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try {
            ProdutoHelper.validarAtualizacao(txtProduto.getText(), txtDescricao.getText(), txtCategoria.getText(), txtQuantidade.getText(), txtPreco.getText());
        } catch (Exception ex) {
            System.err.println("Erro");
        }
        helper.LimpaHelper.limpaTextoInserirProduto();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnTodos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodos1ActionPerformed
        // TODO add your handling code here:
        
        if (visualizarProdutos == null) {
            visualizarProdutos = new VisualizarProdutos();

        }
        visualizarProdutos.setLocationRelativeTo(null);
        visualizarProdutos.setVisible(true);

        try {
            preencherTabelaProdutos();
        } catch (SQLException ex) {

        }
        
        this.dispose();
    }//GEN-LAST:event_btnTodos1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProdutoGUI dialog = new ProdutoGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
      public static void preencherTabelaProdutos() throws SQLException {

        DefaultTableModel model = (DefaultTableModel) VisualizarProdutos.tblTabelaProduto.getModel();
        model.setNumRows(0);

        Object colunas[] = new Object[6];
        Produto produto = new Produto();

        ArrayList<Produto> listaProdutos = new ArrayList<Produto>();

        listaProdutos = ProdutoDAO.listarProdutos();

        for (int i = 0; i < listaProdutos.size(); i++) {

            produto = listaProdutos.get(i);
            colunas[0] = produto.getNome();
            colunas[1] = produto.getDescricao();
            colunas[2] = produto.getCategoriaTexto();
            colunas[3] = produto.getQuantidade();
            colunas[4] = produto.getPreco();
            colunas[5] = produto.getDataHora();

            model.addRow(colunas);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir1;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnTodos1;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> comboBoxPedidos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lb;
    public static javax.swing.JTextField txtCategoria;
    public static javax.swing.JTextField txtDescricao;
    public static javax.swing.JTextField txtPreco;
    public static javax.swing.JTextField txtProduto;
    public static javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables

    public JComboBox<String> getComboBoxPedidos() {
        return comboBoxPedidos;
    }

    public void setComboBoxPedidos(JComboBox<String> comboBoxPedidos) {
        this.comboBoxPedidos = comboBoxPedidos;
    }

}
